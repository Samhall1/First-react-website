{"version":3,"sources":["components/Navbar.js","components/Home.js","components/About.js","components/Accessories.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","to","basketNumbers","Home","onClick","myFunc","About","Accessories","App","state","basket","addToBasket","console","log","setState","this","exact","path","render","component","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gYAqBeA,EAhBA,SAACC,GACZ,OACI,yBAAKC,UAAU,SAEX,wBAAIA,UAAU,SAAd,aAEA,wBAAIA,UAAU,WACV,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,gBAAT,gBACJ,qCAAU,8BAAOF,EAAMG,mBCiBxBC,G,MA7BF,SAACJ,GACV,OACI,yBAAKC,UAAU,QACX,wBAAIA,UAAU,WAAd,gCAEA,yBAAKA,UAAU,OACX,6CACA,8CACA,4BAAQI,QAASL,EAAMM,QAAvB,gBAEJ,yBAAKL,UAAU,OACX,6CACA,8CACA,4BAAQI,QAASL,EAAMM,QAAvB,gBAEJ,yBAAKL,UAAU,WACX,wCACA,8CACA,4BAAQI,QAASL,EAAMM,QAAvB,gBAEJ,yBAAKL,UAAU,WACX,wCACA,8CACA,4BAAQI,QAASL,EAAMM,QAAvB,mBCPDC,G,MAhBD,WACV,OACI,yBAAKN,UAAU,SACX,wBAAIA,UAAU,WAAd,oBACA,uBAAGA,UAAU,QAAb,+EACA,uBAAGA,UAAU,QAAb,iFACA,uBAAGA,UAAU,QAAb,4EACA,wBAAIA,UAAU,SACV,qEACA,wEACA,gF,OCmBDO,G,MA7BK,SAACR,GACjB,OACI,6BACI,wBAAIC,UAAU,WAAd,mCAEA,yBAAKA,UAAU,iBACX,wDACA,gDACA,4BAAQI,QAASL,EAAMM,QAAvB,gBAEJ,yBAAKL,UAAU,iBACX,wDACA,gDACA,4BAAQI,QAASL,EAAMM,QAAvB,gBAEJ,yBAAKL,UAAU,kBACX,mDACA,2CACA,4BAAQI,QAASL,EAAMM,QAAvB,gBAEJ,yBAAKL,UAAU,qBACX,mDACA,gDACA,4BAAQI,QAASL,EAAMM,QAAvB,mBCgBDG,E,4MA/BbC,MAAQ,CACNC,OAAQ,G,EAGVC,YAAc,WACZC,QAAQC,IAAI,oBAEZ,EAAKC,SAAS,CACZJ,OAAQ,EAAKD,MAAMC,OAAS,K,uDAItB,IAAD,OACP,OACE,6BACE,kBAAC,IAAD,KACG,kBAAC,EAAD,CAAQR,cAAea,KAAKN,MAAMC,SAEjC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,OAAS,kBAAM,kBAAC,EAAD,CAAMb,OAAQ,EAAKM,iBACxD,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,SAASE,UAAWb,IACtC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,eAAeC,OAAW,kBAAK,kBAAC,EAAD,CAAab,OAAQ,EAAKM,wB,GAvBzES,IAAMC,WCGJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAST,OACP,kBAAC,IAAMU,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1B,QAAQ0B,MAAMA,EAAMC,c","file":"static/js/main.7a3883e1.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.css';\nimport { Link } from 'react-router-dom';\n\n\nconst Navbar = (props) => {\n    return (\n        <nav className=\"whole\">\n              \n            <h1 className=\"title\">The $hop </h1>\n          \n            <ul className=\"buttons\">\n                <li><Link to=\"/\">Home</Link></li>\n                <li><Link to=\"/About\">About</Link></li>\n                <li><Link to=\"/Accessories\">Accessories</Link></li>\n                <li>Cart: <span>{props.basketNumbers}</span></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport './Home.css';\n\nconst Home = (props) => {\n    return (\n        <div className=\"home\">\n            <h1 className=\"heading\">Welcome to the products page</h1>\n           \n            <div className=\"pS4\">\n                <h3>Playstation 4</h3>\n                <h3>Price: £399</h3>\n                <button onClick={props.myFunc}>Add to Cart</button>\n            </div>\n            <div className=\"pS5\">\n                <h3>Playstation 5</h3>\n                <h3>Price: £499</h3>\n                <button onClick={props.myFunc}>Add to Cart</button>\n            </div>\n            <div className=\"xboxOne\">\n                <h3>XBOX ONE</h3>\n                <h3>Price: £349</h3>\n                <button onClick={props.myFunc}>Add to Cart</button>\n            </div>\n            <div className=\"XBOX360\">\n                <h3>XBOX 360</h3>\n                <h3>Price: £249</h3>\n                <button onClick={props.myFunc}>Add to Cart</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport './About.css';\n\nconst About = () => {\n    return (\n        <div className=\"about\">\n            <h1 className=\"heading\">Up coming events</h1>\n            <p className=\"dets\">Details will be laid out in full 8 weeks prior to the events taking place. </p>\n            <p className=\"dets\">Tickets will go on sale 6 weeks prior keep an eye on this page for more info.</p>\n            <p className=\"dets\">In the mean time keep an eye on all our products for the up coming sale.</p>\n            <ul className=\"event\">\n                <li>03/April/2020 @ The 02 Arena - London</li>\n                <li>15/May/2020 @ The MEN Arena - Manchester</li>\n                <li>22/June/2020 @ Victoria Warehouse Manchester</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\nimport './Accessories.css';\n\nconst Accessories = (props) => {\n    return (\n        <div>\n            <h1 className=\"heading\">Welcome to the Accessories page</h1>\n           \n            <div className=\"PS5Controller\">\n                <h3>Playstation 5 Controller</h3>\n                <h3>Price: £49.99</h3>\n                <button onClick={props.myFunc}>Add to Cart</button>\n            </div>\n            <div className=\"PS4Controller\">\n                <h3>Playstation 4 Controller</h3>\n                <h3>Price: £49.99</h3>\n                <button onClick={props.myFunc}>Add to Cart</button>\n            </div>\n            <div className=\"XBOXCONTROLLER\">\n                <h3>XBOX 360 Controller</h3>\n                <h3>Price:49.99</h3>\n                <button onClick={props.myFunc}>Add to Cart</button>\n            </div>\n            <div className=\"XBOXONECONTROLLER\">\n                <h3>XBOX ONE CONTROLLER</h3>\n                <h3>Price: £49.99</h3>\n                <button onClick={props.myFunc}>Add to Cart</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Accessories;\n\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport About from './components/About';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Accessories from './components/Accessories';\n\n\nclass App extends React.Component {\n\n  state = {\n    basket: 0\n  }\n\n  addToBasket = () => {\n    console.log(\"Adding to basket\");\n\n    this.setState({\n      basket: this.state.basket + 1\n    })\n  }\n\n  render() {\n    return(\n      <div>\n        <BrowserRouter>\n           <Navbar basketNumbers={this.state.basket}/>\n          \n            <Switch>\n                <Route exact path=\"/\" render={ () => <Home myFunc={this.addToBasket}/>}  />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/accessories\" render = { () =><Accessories myFunc={this.addToBasket} />} />\n           </Switch>\n\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}